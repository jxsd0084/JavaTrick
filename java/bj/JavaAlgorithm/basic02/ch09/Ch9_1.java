package bj.JavaAlgorithm.basic02.ch09;

/*
  图解java数据结构
*/
public class Ch9_1
{
	public static void main(String[] args) 
	{
		int n=7;//地图上国家数目
		
		/*数组r用来存储国家之间的相邻关系*/
		int r[][]={{0,1,0,0,0,1,1},{1,0,1,1,1,1,0},{0,1,0,1,0,0,0},
				{0,1,1,0,1,0,0},{0,1,0,1,0,1,0},{1,1,0,0,1,0,1},{1,0,0,0,0,1,0}};
//		int n=5;
//		int r[][]={{0,1,1,1,1},{1,0,0,0,0},{1,0,0,0,0},{1,0,0,0,0},{1,0,0,0,0}};
		
		int c[]=new int[n];//用来存储每个国家所着色颜色
		
		c[0]=1;//第一个国家着第1种颜色
		
		int i=1;//从第2个国家开始试探着色
		int j=1;//从第1种颜色试探给后面的国家着色
		int k;
		
		while(i<n)
			while(j<=4)
			{
				k=0;
				while(k<i&&c[k]*r[i][k]!=j)//判断颜色是否被用过
					k=k+1;
				if(k<i)//当前颜色被用过，j+1
					j=j+1;
				else//颜色没被用过，着色，进行下一个国家，从颜色1开始着色
				{
					c[i]=j;
					i=i+1;
					if(i>6)//全部满足条件，退出循环
						break;
					j=1;
				}
				if(j>4)//颜色都用过，回溯继续
				{
					i=i-1;
					j=c[i]+1;
				}
			}
		
		System.out.print("着色方案如下：\n");
		for(i=0;i<n;i++)
			System.out.print(c[i]);
	}
}
