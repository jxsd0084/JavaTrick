单一职责原则的英文名称是Single Responsibility Principle，简称是SRP。


这个原则存在争议之处在哪里呢？

就是对职责的定义，什么是类的职责，以及怎么划分类的职责。


1.4 最佳实践

    阅读到这里，可能有人会问我，你写的是类的设计原则吗？你通篇都在说接口的单一职
责，类的单一职责你都违背了呀！呵呵，这个还真是的，我的本意是想把这个原则讲清楚，
类的单一职责嘛，这个很简单，但当我回头写的时候，发觉并不是这么回事，翻看了以前的
一些设计和代码，基本上拿得出手的类设计都是与单一职责相违背的。静下心来回忆，发觉
每一个类这样设计都是有原因的。我查阅了Wikipedia、OODesign等几个网站，专家和我也
有类似的经验，基本上类的单一职责都用了类似的一句话来说"This is sometimes hard to
see"，这句话翻译过来就是“这个有时候很难说”。是的，类的单一职责确实受非常多因素的
制约，纯理论地来讲，这个原则是非常优秀的，但是现实有现实的难处，你必须去考虑项目
工期、成本、人员技术水平、硬件情况、网络情况甚至有时候还要考虑政府政策、垄断协议
等因素。比如，2004年我就做过一个项目，做加密处理的，甲方就甩过来一句话，你什么都
不用管，调用这个API就可以了，不用考虑什么传输协议、异常处理、安全连接等。所以，
我们就直接使用了JNI与加密厂商提供的API通信，什么单一职责原则，根本就不用考虑，因
为对方不公布通信接口和异常判断。

    对于单一职责原则，我的建议是接口一定要做到单一职责，类的设计尽量做到只有一个
原因引起变化。

